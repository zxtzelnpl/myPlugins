Block-level elements are those elements of the source document that are formatted visually as blocks (e.g., paragraphs).

The following values of the ‘display’ property make an element block-level: ‘block’, ‘list-item’, and ‘table’.

Block-level boxes are boxes that participate in a block formatting context.

Each block-level element generates a principal block-level box that contains descendant boxes and generated content and is also the box involved in any positioning scheme

content edge or inner edge

The content edge surrounds the rectangle given by the width and height of the box, which often depend on the element’s rendered content.

The four content edges define the box’s content box.

padding edge

The padding edge surrounds the box padding. If the padding has 0 width, the padding edge is the same as the content edge.

The four padding edges define the box’s padding box.

border edge

The border edge surrounds the box’s border. If the border has 0 width, the border edge is the same as the padding edge.

The four border edges define the box’s border box.

margin edge or outer edge

The margin edge surrounds the box margin. If the margin has 0 width, the margin edge is the same as the border edge.

The four margin edges define the box’s margin box.


Floats, absolutely positioned elements, block containers (such as inline-blocks, table-cells, and table-captions) that are not block boxes,
and block boxes with ‘overflow’ other than ‘visible’ (except when that value has been propagated to the viewport) establish new block formatting contexts for their contents.

In a block formatting context, boxes are laid out one after the other, vertically,
beginning at the top of a containing block. The vertical distance between two sibling boxes is determined by the ‘margin’ properties.

Vertical margins between adjacent block-level boxes in a block formatting context collapse.

In a block formatting context, each box’s left outer edge touches the left edge of the containing block (for right-to-left formatting, right edges touch).
This is true even in the presence of floats (although a box’s line boxes may shrink due to the floats),
unless the box establishes a new block formatting context (in which case the box itself may become narrower due to the floats).


一、BFC是什么？
    BFC 定义
        BFC(Block formatting context)直译为"块级格式化上下文"。
        它是一个独立的渲染区域，只有Block-level box参与， 它规定了内部的Block-level Box如何布局，并且与这个区域外部毫不相干。
    BFC布局规则：
        内部的Box会在垂直方向，一个接一个地放置。
        Box垂直方向的距离由margin决定。属于同一个BFC的两个相邻Box的margin会发生重叠。
        每个元素的margin box的左边， 与包含块border box的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。
        BFC的区域不会与float box重叠。
        BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。
        计算BFC的高度时，浮动元素也参与计算
二、哪些元素会生成BFC?
    根元素
    float属性不为none
    position为absolute或fixed
    display为inline-block, table-cell, table-caption, flex, inline-flex
    overflow不为visible
三、BFC的作用及原理
    1. 自适应两栏布局
    2. 清除内部浮动
    3. 防止垂直 margin 重叠
        折叠的结果：
        两个相邻的外边距都是正数时，折叠结果是它们两者之间较大的值。
        两个相邻的外边距都是负数时，折叠结果是两者绝对值的较大值。
        两个外边距一正一负时，折叠结果是两者的相加的和。
四、block-level box: display属性为block, list-item, table的元素


overflow:hidden创建的BFC还是会发生折叠
float创建的BFC不会发生margin折叠
display:inline-block创建的BFC不会发生margin折叠